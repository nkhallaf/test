//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("NERModel", "FK_TriggerWords_TaggingTable", "TaggingTable", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NER.DAL.TaggingTable), "TriggerWord", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NER.DAL.TriggerWord), true)]
[assembly: EdmRelationshipAttribute("NERModel", "FK_Words_tagged_TaggingTable", "TaggingTable", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NER.DAL.TaggingTable), "Words_tagged", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NER.DAL.Words_tagged), true)]

#endregion

namespace NER.DAL
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class NEREntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new NEREntities object using the connection string found in the 'NEREntities' section of the application configuration file.
        /// </summary>
        public NEREntities() : base("name=NEREntities", "NEREntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new NEREntities object.
        /// </summary>
        public NEREntities(string connectionString) : base(connectionString, "NEREntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new NEREntities object.
        /// </summary>
        public NEREntities(EntityConnection connection) : base(connection, "NEREntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TriggerWord> TriggerWords
        {
            get
            {
                if ((_TriggerWords == null))
                {
                    _TriggerWords = base.CreateObjectSet<TriggerWord>("TriggerWords");
                }
                return _TriggerWords;
            }
        }
        private ObjectSet<TriggerWord> _TriggerWords;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Words_tagged> Words_tagged
        {
            get
            {
                if ((_Words_tagged == null))
                {
                    _Words_tagged = base.CreateObjectSet<Words_tagged>("Words_tagged");
                }
                return _Words_tagged;
            }
        }
        private ObjectSet<Words_tagged> _Words_tagged;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TaggingTable> TaggingTables
        {
            get
            {
                if ((_TaggingTables == null))
                {
                    _TaggingTables = base.CreateObjectSet<TaggingTable>("TaggingTables");
                }
                return _TaggingTables;
            }
        }
        private ObjectSet<TaggingTable> _TaggingTables;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TriggerWords EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTriggerWords(TriggerWord triggerWord)
        {
            base.AddObject("TriggerWords", triggerWord);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Words_tagged EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWords_tagged(Words_tagged words_tagged)
        {
            base.AddObject("Words_tagged", words_tagged);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TaggingTables EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTaggingTables(TaggingTable taggingTable)
        {
            base.AddObject("TaggingTables", taggingTable);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NERModel", Name="TaggingTable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TaggingTable : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TaggingTable object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static TaggingTable CreateTaggingTable(global::System.Int32 id)
        {
            TaggingTable taggingTable = new TaggingTable();
            taggingTable.ID = id;
            return taggingTable;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Tag
        {
            get
            {
                return _Tag;
            }
            set
            {
                OnTagChanging(value);
                ReportPropertyChanging("Tag");
                _Tag = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Tag");
                OnTagChanged();
            }
        }
        private global::System.String _Tag;
        partial void OnTagChanging(global::System.String value);
        partial void OnTagChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Parent
        {
            get
            {
                return _Parent;
            }
            set
            {
                OnParentChanging(value);
                ReportPropertyChanging("Parent");
                _Parent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Parent");
                OnParentChanged();
            }
        }
        private Nullable<global::System.Int32> _Parent;
        partial void OnParentChanging(Nullable<global::System.Int32> value);
        partial void OnParentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> statues
        {
            get
            {
                return _statues;
            }
            set
            {
                OnstatuesChanging(value);
                ReportPropertyChanging("statues");
                _statues = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("statues");
                OnstatuesChanged();
            }
        }
        private Nullable<global::System.Boolean> _statues;
        partial void OnstatuesChanging(Nullable<global::System.Boolean> value);
        partial void OnstatuesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Order
        {
            get
            {
                return _Order;
            }
            set
            {
                OnOrderChanging(value);
                ReportPropertyChanging("Order");
                _Order = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Order");
                OnOrderChanged();
            }
        }
        private Nullable<global::System.Int32> _Order;
        partial void OnOrderChanging(Nullable<global::System.Int32> value);
        partial void OnOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NETag
        {
            get
            {
                return _NETag;
            }
            set
            {
                OnNETagChanging(value);
                ReportPropertyChanging("NETag");
                _NETag = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NETag");
                OnNETagChanged();
            }
        }
        private global::System.String _NETag;
        partial void OnNETagChanging(global::System.String value);
        partial void OnNETagChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Color
        {
            get
            {
                return _Color;
            }
            set
            {
                OnColorChanging(value);
                ReportPropertyChanging("Color");
                _Color = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Color");
                OnColorChanged();
            }
        }
        private global::System.String _Color;
        partial void OnColorChanging(global::System.String value);
        partial void OnColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TooltipInfo
        {
            get
            {
                return _TooltipInfo;
            }
            set
            {
                OnTooltipInfoChanging(value);
                ReportPropertyChanging("TooltipInfo");
                _TooltipInfo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TooltipInfo");
                OnTooltipInfoChanged();
            }
        }
        private global::System.String _TooltipInfo;
        partial void OnTooltipInfoChanging(global::System.String value);
        partial void OnTooltipInfoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NERModel", "FK_TriggerWords_TaggingTable", "TriggerWord")]
        public EntityCollection<TriggerWord> TriggerWords
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TriggerWord>("NERModel.FK_TriggerWords_TaggingTable", "TriggerWord");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TriggerWord>("NERModel.FK_TriggerWords_TaggingTable", "TriggerWord", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NERModel", "FK_Words_tagged_TaggingTable", "Words_tagged")]
        public EntityCollection<Words_tagged> Words_tagged
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Words_tagged>("NERModel.FK_Words_tagged_TaggingTable", "Words_tagged");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Words_tagged>("NERModel.FK_Words_tagged_TaggingTable", "Words_tagged", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NERModel", Name="TriggerWord")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TriggerWord : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TriggerWord object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="taggingWordId">Initial value of the TaggingWordId property.</param>
        public static TriggerWord CreateTriggerWord(global::System.Int32 id, global::System.Int32 taggingWordId)
        {
            TriggerWord triggerWord = new TriggerWord();
            triggerWord.ID = id;
            triggerWord.TaggingWordId = taggingWordId;
            return triggerWord;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaggingWordId
        {
            get
            {
                return _TaggingWordId;
            }
            set
            {
                OnTaggingWordIdChanging(value);
                ReportPropertyChanging("TaggingWordId");
                _TaggingWordId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaggingWordId");
                OnTaggingWordIdChanged();
            }
        }
        private global::System.Int32 _TaggingWordId;
        partial void OnTaggingWordIdChanging(global::System.Int32 value);
        partial void OnTaggingWordIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Word
        {
            get
            {
                return _Word;
            }
            set
            {
                OnWordChanging(value);
                ReportPropertyChanging("Word");
                _Word = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Word");
                OnWordChanged();
            }
        }
        private global::System.String _Word;
        partial void OnWordChanging(global::System.String value);
        partial void OnWordChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NERModel", "FK_TriggerWords_TaggingTable", "TaggingTable")]
        public TaggingTable TaggingTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaggingTable>("NERModel.FK_TriggerWords_TaggingTable", "TaggingTable").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaggingTable>("NERModel.FK_TriggerWords_TaggingTable", "TaggingTable").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TaggingTable> TaggingTableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaggingTable>("NERModel.FK_TriggerWords_TaggingTable", "TaggingTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TaggingTable>("NERModel.FK_TriggerWords_TaggingTable", "TaggingTable", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NERModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="isAdmin">Initial value of the IsAdmin property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String userName, global::System.String password, global::System.Boolean isAdmin)
        {
            User user = new User();
            user.ID = id;
            user.UserName = userName;
            user.Password = password;
            user.IsAdmin = isAdmin;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAdmin
        {
            get
            {
                return _IsAdmin;
            }
            set
            {
                OnIsAdminChanging(value);
                ReportPropertyChanging("IsAdmin");
                _IsAdmin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAdmin");
                OnIsAdminChanged();
            }
        }
        private global::System.Boolean _IsAdmin;
        partial void OnIsAdminChanging(global::System.Boolean value);
        partial void OnIsAdminChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NERModel", Name="Words_tagged")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Words_tagged : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Words_tagged object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="word">Initial value of the word property.</param>
        /// <param name="tag">Initial value of the tag property.</param>
        public static Words_tagged CreateWords_tagged(global::System.Int32 id, global::System.String word, global::System.String tag)
        {
            Words_tagged words_tagged = new Words_tagged();
            words_tagged.Id = id;
            words_tagged.word = word;
            words_tagged.tag = tag;
            return words_tagged;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String word
        {
            get
            {
                return _word;
            }
            set
            {
                OnwordChanging(value);
                ReportPropertyChanging("word");
                _word = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("word");
                OnwordChanged();
            }
        }
        private global::System.String _word;
        partial void OnwordChanging(global::System.String value);
        partial void OnwordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String tag
        {
            get
            {
                return _tag;
            }
            set
            {
                OntagChanging(value);
                ReportPropertyChanging("tag");
                _tag = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("tag");
                OntagChanged();
            }
        }
        private global::System.String _tag;
        partial void OntagChanging(global::System.String value);
        partial void OntagChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TagID
        {
            get
            {
                return _TagID;
            }
            set
            {
                OnTagIDChanging(value);
                ReportPropertyChanging("TagID");
                _TagID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TagID");
                OnTagIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TagID;
        partial void OnTagIDChanging(Nullable<global::System.Int32> value);
        partial void OnTagIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NERModel", "FK_Words_tagged_TaggingTable", "TaggingTable")]
        public TaggingTable TaggingTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaggingTable>("NERModel.FK_Words_tagged_TaggingTable", "TaggingTable").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaggingTable>("NERModel.FK_Words_tagged_TaggingTable", "TaggingTable").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TaggingTable> TaggingTableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaggingTable>("NERModel.FK_Words_tagged_TaggingTable", "TaggingTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TaggingTable>("NERModel.FK_Words_tagged_TaggingTable", "TaggingTable", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
